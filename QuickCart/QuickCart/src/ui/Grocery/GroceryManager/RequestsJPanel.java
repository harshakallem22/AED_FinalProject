/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Grocery.GroceryManager;

import business.EcoSystem.EcoSystem;
import business.Enterprise.Enterprise;
import business.Enterprise.GroceryEnterprise;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.SupplyOfferRequest;
import business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SAI SRIDHAR
 */
public class RequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestsJPanel
     */
    JPanel upc;
    UserAccount account;
    Organization organization;
    EcoSystem ecosystem;
    GroceryEnterprise enterprise;
    public RequestsJPanel(JPanel workArea, UserAccount account, Organization organization, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.upc = workArea;
        this.account = account;
        this.organization = organization;
        this.ecosystem = ecosystem;
        this.enterprise = (GroceryEnterprise) enterprise;
        populateRequestsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnDecline = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();

        setBackground(new java.awt.Color(248, 203, 70));

        refreshJButton.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        tblRequests.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Inventory Name", "Email", "Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequests);

        btnDecline.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        btnApprove.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDecline)
                            .addGap(78, 78, 78)
                            .addComponent(btnApprove))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(refreshJButton)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDecline)
                    .addComponent(btnApprove))
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateRequestsTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        int selectedRow = tblRequests.getSelectedRow();

        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a request!");
            return;
        }

        String inventoryName = (String) tblRequests.getValueAt(selectedRow, 0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
            if (request instanceof SupplyOfferRequest) {
                SupplyOfferRequest offer = (SupplyOfferRequest) request;
                System.out.println(offer.getStatus());
                if (offer.getInventoryName().equals(inventoryName)) {
                    offer.setStatus("Rejected");
                    javax.swing.JOptionPane.showMessageDialog(this, "Request rejected!");
                    populateRequestsTable();
                    return;
                }
            }
        }
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();

        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a request!");
            return;
        }

        String inventoryName = (String) tblRequests.getValueAt(selectedRow, 0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
            if (request instanceof SupplyOfferRequest) {
                SupplyOfferRequest offer = (SupplyOfferRequest) request;
                if (offer.getInventoryName().equals(inventoryName)) {
                    offer.setStatus("Approved");
                    javax.swing.JOptionPane.showMessageDialog(this, "Request approved!");
                    populateRequestsTable();
                    return;
                }
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void populateRequestsTable() {
    DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
    model.setRowCount(0);

    for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
        if (request instanceof SupplyOfferRequest) {
            SupplyOfferRequest offer = (SupplyOfferRequest) request;
            if(!(offer.getStatus().equals("Rejected")) || (!(offer.getStatus().equals("Approved")))){
                 Object[] row = new Object[4];
                row[0] = offer.getInventoryName();
                row[1] = offer.getInventoryEmail();
                row[2] = offer.getInventoryLocation();
                row[3] = offer.getStatus();

                model.addRow(row);
            }
        }
    }
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnDecline;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables
}
