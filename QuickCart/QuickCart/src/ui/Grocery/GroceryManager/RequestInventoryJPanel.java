/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Grocery.GroceryManager;

import business.EcoSystem.EcoSystem;
import business.Enterprise.Enterprise;
import business.Enterprise.GroceryEnterprise;
import business.Enterprise.InventoryEnterprise;
import business.Item.GroceryItem;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SAI SRIDHAR
 */
public class RequestInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestInventoryJPanel
     */
    JPanel upc;
    UserAccount account;
    Organization organization;
    EcoSystem ecosystem;
    GroceryEnterprise enterprise;
    private InventoryEnterprise selectedInventory;
    private ArrayList<GroceryItem> shortageItems; 
    public RequestInventoryJPanel(JPanel workArea, UserAccount account, Organization organization, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.upc = workArea;
        this.account = account;
        this.organization = organization;
        this.ecosystem = ecosystem;
        this.enterprise = (GroceryEnterprise) enterprise;
        populateInventoryTable();
        populateLowStockItemsTable();
    }
    
    private void populateInventoryTable() {
        DefaultTableModel model = (DefaultTableModel) tblInventories.getModel();
        model.setRowCount(0); 

        ArrayList<InventoryEnterprise> inventoryList = enterprise.getInventoryList(); 
        for (InventoryEnterprise inventory : inventoryList) {
            Object[] row = new Object[3];
            row[0] = inventory.getName();
            row[1] = inventory.getAddress();
            row[2] = inventory.getEmail();
            model.addRow(row);
        }
    }
    
    
    private void populateLowStockItemsTable() {
        DefaultTableModel model = (DefaultTableModel) tblLowStockItems.getModel();
        model.setRowCount(0);
        
        // Populate the table with low stock items from the grocery store
        shortageItems = enterprise.checkForShortage();  // Get items that are in shortage
        for (GroceryItem item : shortageItems) {
            model.addRow(new Object[] {
                item.getName(),
                item.getAvailability()
            });
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventories = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLowStockItems = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(248, 203, 70));

        tblInventories.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        tblInventories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Inventory Name", "Inventory Address", "Inventory Email"
            }
        ));
        tblInventories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInventoriesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInventories);

        tblLowStockItems.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        tblLowStockItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item Name", "Item Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblLowStockItems);

        jButton1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jButton1.setText("Request for Stock");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap(285, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (selectedInventory != null) {
            enterprise.requestRestocking(selectedInventory, shortageItems);
            JOptionPane.showMessageDialog(this, "Restock request sent to " + selectedInventory.getName());
        } else {
            JOptionPane.showMessageDialog(this, "Please select an inventory and ensure there are shortage items.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblInventoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInventoriesMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblInventories.getSelectedRow();  
    
    if (selectedRow >= 0) {
        ArrayList<InventoryEnterprise> inventoryList = enterprise.getInventoryList();
        selectedInventory = inventoryList.get(selectedRow);
        
        System.out.println("Selected Inventory: " + selectedInventory.getName());
    }
    }//GEN-LAST:event_tblInventoriesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblInventories;
    private javax.swing.JTable tblLowStockItems;
    // End of variables declaration//GEN-END:variables
}
