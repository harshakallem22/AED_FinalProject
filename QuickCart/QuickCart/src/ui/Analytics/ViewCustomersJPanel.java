/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package ui.Analytics;

import business.EcoSystem.EcoSystem;
import business.Enterprise.Enterprise;
import business.FakerMockData.MockOrderGeneration;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.CustomerAccount;
import business.UserAccount.EmployeeAccount;
import business.UserAccount.UserAccount;
import business.WorkQueue.OrderRequest;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SAI SRIDHAR
 */
public class ViewCustomersJPanel extends javax.swing.JPanel {

    /** Creates new form ViewCustomersJPanel */
    Network network;
    JPanel workArea;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    EcoSystem business;
    private ArrayList<CustomerAccount> customerList;
    private ArrayList<CustomerAccount> allCustomerAccounts;
    private ArrayList<CustomerAccount> fakerCustomers;
    public ViewCustomersJPanel(JPanel workArea, EmployeeAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        network = business.getNetworkList().get(0);
        this.workArea = workArea;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        initComponents();
        this.customerList = business.getUserAccountDirectory().getCustomerList();
        fakerCustomers = MockOrderGeneration.generateFakerCustomers(10);
        this.allCustomerAccounts = new ArrayList<>(customerList);
        this.allCustomerAccounts.addAll(fakerCustomers);

        populateTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("CUSTOMERS");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel2.setText("No. of Orders");

        jLabel3.setText("Purchase Cost");

        jButton1.setText("Enable Discount");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(353, 353, 353))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(btnView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(53, 53, 53)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(51, 51, 51)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jButton1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(58, 58, 58)
                        .addComponent(jButton1)))
                .addGap(47, 47, 47)
                .addComponent(btnView)
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a customer.");
            return;
        }

        CustomerAccount selectedCustomer = allCustomerAccounts.get(selectedRow);

        double totalRevenue = 0;
        int totalOrders = 0;

        ArrayList<OrderRequest> allOrders = MockOrderGeneration.generateOrdersForCustomer(selectedCustomer, 10);
        if (fakerCustomers.contains(selectedCustomer)) {
        ArrayList<OrderRequest> fakeOrders = MockOrderGeneration.generateOrdersForCustomer(selectedCustomer, 10);

        for (OrderRequest order : fakeOrders) {
            totalRevenue += order.getAmount();
            totalOrders++;
        }

    } else {
//        ArrayList<OrderRequest> realOrders = selectedCustomer.get;
//
//        for (OrderRequest order : realOrders) {
//            totalRevenue += order.getAmount();
//            totalOrders++;
//        }

    }
       
        jTextField1.setText(String.valueOf(totalOrders)); 
        jTextField2.setText(String.format("%.2f", totalRevenue)); 

        if (totalRevenue > 1300) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    selectedCustomer.getCustomer().getName() + " is eligible for 30% off on the next order!");
            //selectedCustomer.getCart().applyDiscountForNextOrders(5, 50); // Apply discount for the next 5 orders
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        if (allCustomerAccounts == null || allCustomerAccounts.isEmpty()) {
        System.out.println("No customer accounts available to display.");
        return; // Exit if the customer list is null or empty
    }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (CustomerAccount customerAccount : allCustomerAccounts) {
            Object[] row = new Object[2];
            System.out.println("Customer account is "+customerAccount.getCustomer());
            row[0] = customerAccount;
            row[1] = customerAccount.getCustomer().getEmail();
            model.addRow(row);
        }
    }

}
