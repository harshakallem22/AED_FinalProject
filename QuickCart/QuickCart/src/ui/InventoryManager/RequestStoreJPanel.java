/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.InventoryManager;

import business.EcoSystem.EcoSystem;
import business.Enterprise.Enterprise;
import business.Enterprise.GroceryEnterprise;
import business.Enterprise.InventoryEnterprise;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.SupplyOfferRequest;
import business.WorkQueue.WorkRequest;
//import com.sun.xml.internal.messaging.saaj.packaging.mime.MessagingException;
import java.net.Authenticator;
import java.net.PasswordAuthentication;
import static java.time.Clock.system;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SAI SRIDHAR
 */
public class RequestStoreJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestStoreJPanel
     */
    JPanel workArea;
    UserAccount account; Organization organization;
    EcoSystem business;
    Enterprise enterprise;
    String fromEmail;
    public RequestStoreJPanel(JPanel workArea, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.workArea = workArea;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = (InventoryEnterprise)enterprise;
//        fromEmail = enterprise.getEmail();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStores = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(152, 251, 203));

        tblStores.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        tblStores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Store", "Email", "Address", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStores);

        jButton1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jButton1.setText("Send Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jLabel1.setText("Write Message Here :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)))
                .addComponent(jButton1)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblStores.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a store to send the request.");
            return;
        }
        
        if(tblStores.getValueAt(selectedRow, 0).equals("Approved")){
            JOptionPane.showMessageDialog(this, "Please check the store!");
            return;
        }
        
        if(tblStores.getValueAt(selectedRow, 0).equals("Approved")){
            JOptionPane.showMessageDialog(this, "Request already accepted");
            return;
        }

        String storeName = tblStores.getValueAt(selectedRow, 0).toString();
        String email = (String) tblStores.getValueAt(selectedRow, 1);
        GroceryEnterprise selectedStore = (GroceryEnterprise) tblStores.getValueAt(selectedRow, 0);
        String subject = "Supply Request from Inventory Manager";
        String message = "Dear "  + ",\n\n"
                + jTextArea1.getText() +"\n"
                + "We would like to request supply for your store. Please get back to us with available stock and pricing.\n\n"
                + "Thank you.\nInventory Manager.";
        SupplyOfferRequest offerRequest = new SupplyOfferRequest(
            account,
            (InventoryEnterprise) enterprise,
            selectedStore,
            message
            );
        offerRequest.setStatus("Processing");
        selectedStore.getWorkQueue().getWorkRequestList().add(offerRequest);
        JOptionPane.showMessageDialog(this, "Request sent to " + storeName + " (" + email + ").");
        tblStores.setValueAt(offerRequest.getStatus(), selectedRow, 3);
        try {

            //sendEmail(email, subject, message);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error sending request: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
//    private void sendEmail(String to, String subject, String messageText) throws MessagingException {
//        // Set up email properties
////        Properties properties = new Properties();
////        properties.put("mail.smtp.host", "smtp.gmail.com");
////        properties.put("mail.smtp.port", "587");
////        properties.put("mail.smtp.auth", "true");
////        properties.put("mail.smtp.starttls.enable", "true");
////
////        // Create a session
////        Session session = Session.getInstance(properties, new Authenticator() {
////            @Override
////            protected PasswordAuthentication getPasswordAuthentication() {
////                return new PasswordAuthentication(fromEmail, "null");
////            }
////        });
////
////        // Create the email message
////        Message message = new MimeMessage(session);
////        message.setFrom(new InternetAddress(fromEmail));
////        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
////        message.setSubject(subject);
////        message.setText(messageText);
////
////        // Send the email
////        Transport.send(message);
//    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblStores.getModel();
        model.setRowCount(0);
        HashSet<String> addedStores = new HashSet<>();
        for (Network network : business.getNetworkList()) {
            ArrayList<Enterprise> stores = network.getStoreEnterprises();
            for (Enterprise store : stores) {
                if (!addedStores.contains(store.getName())) {
                    Object[] row = new Object[4];
                    System.out.println(store.getEmail());
                    row[0] = store;
                    row[1] = store.getEmail();
                    row[2] = store.getAddress();
                    for (WorkRequest request : store.getWorkQueue().getWorkRequestList()) {
                        if (request instanceof SupplyOfferRequest) {
                            SupplyOfferRequest offer = (SupplyOfferRequest) request;
                            row[3] = offer.getStatus();
                        }
                    }
                    model.addRow(row);
                    addedStores.add(store.getName());
                }
                
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tblStores;
    // End of variables declaration//GEN-END:variables
}
