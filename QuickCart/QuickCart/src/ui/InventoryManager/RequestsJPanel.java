/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.InventoryManager;

import business.EcoSystem.EcoSystem;
import business.Enterprise.Enterprise;
import business.Enterprise.InventoryEnterprise;
import business.Item.GroceryItem;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.ItemRestockRequest;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.Restaurant.RestaurantManager.AddItemJPanel;

/**
 *
 * @author SAI SRIDHAR
 */
public class RequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestsJPanel
     */
    JPanel workArea;
    UserAccount account; Organization organization;
    EcoSystem business;
    InventoryEnterprise enterprise;
    public RequestsJPanel(JPanel workArea, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.workArea = workArea;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = (InventoryEnterprise)enterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSendItems = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(152, 251, 203));

        btnSendItems.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        btnSendItems.setText("Send Items");
        btnSendItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendItemsActionPerformed(evt);
            }
        });

        refreshJButton.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        tblRequests.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Store Name", "Email", "Address", "Item Count", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequests);
        if (tblRequests.getColumnModel().getColumnCount() > 0) {
            tblRequests.getColumnModel().getColumn(3).setHeaderValue("Item Count");
        }

        jButton1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jButton1.setText("View Detailed Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(52, 52, 52)
                            .addComponent(btnSendItems))))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(refreshJButton)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendItems)
                    .addComponent(jButton1))
                .addContainerGap(276, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendItemsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
    if (selectedRow >= 0) {
        ItemRestockRequest selectedRequest = (ItemRestockRequest) tblRequests.getValueAt(selectedRow, 0); 
        ArrayList<GroceryItem> shortageItems = selectedRequest.getShortageItems();
        
        for (GroceryItem item : shortageItems) {
            item.setAvailability(item.getAvailability() + 100);
        }
        
        selectedRequest.markAsCompleted();
        populateTable();
    } else {
        JOptionPane.showMessageDialog(this, "Please select a request to send.");
    }
    }//GEN-LAST:event_btnSendItemsActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow >= 0) {
            ItemRestockRequest selectedRequest = (ItemRestockRequest) tblRequests.getValueAt(selectedRow, 0); 
            ArrayList<GroceryItem> shortageItems = selectedRequest.getShortageItems();
            JFrame addItemFrame = new JFrame("View Detailed Order");
        addItemFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addItemFrame.setSize(600, 600);
        addItemFrame.setLocationRelativeTo(null);

        ViewDetailedOrder addItemPanel = new ViewDetailedOrder(shortageItems);
        addItemFrame.add(addItemPanel);

        addItemFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a request to send.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendItems;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
    model.setRowCount(0); 
    
    for (ItemRestockRequest request : enterprise.getRestockRequests()) {
        if(request.getStatus().equals("Pending")){
            Object[] row = new Object[5];
            row[0] = request; 
            row[1] = request.getTargetStore().getEmail(); 
            row[2] = request.getTargetStore().getAddress(); 
            row[3] = request.getShortageItems().size(); 
            row[4] = request.getStatus();
            model.addRow(row);
        }
        
    }
    }
}
