/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import business.EcoSystem.ConfigureASystem;
import business.EcoSystem.EcoSystem;
import business.Employee.Employee;
import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.CustomerAccount;
import business.UserAccount.EmployeeAccount;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author SAI SRIDHAR
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    private EcoSystem system;
    private JPanel workArea;
    public LoginJPanel(JPanel workArea) {
        initComponents();
        this.workArea = workArea;
        system = ConfigureASystem.configure();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        lblUsername.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        lblUsername.setText("Username");

        lblPassword.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        lblPassword.setText("Password ");

        btnLogin.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/quickcartlogo4.jpg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Welcome back!!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel2)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsername)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(btnLogin))
                    .addComponent(jLabel1))
                .addContainerGap(136, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        // Get user name
        String userName = txtUsername.getText();
        // Get Password
        String password = new String(txtPassword.getPassword());
        Enterprise e=null;
        //Step1: Check in the system admin user account directory if you have the user
        if((system.getUserAccountDirectory().authenticateUser(userName, password)) instanceof CustomerAccount){
            CustomerAccount cusa = (CustomerAccount) system.getUserAccountDirectory().authenticateUser(userName, password);
        }

        else{
            EmployeeAccount ea =  (EmployeeAccount) system.getUserAccountDirectory().authenticateUser(userName, password);
            System.out.println("Hiiiiii");
            System.out.println(ea);
//            System.out.println(ea.getEmployee().getName());
            
            for(Network network : system.getNetworkList()){
                for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                    System.out.println("Check 1");
                    for(Employee emp : enterprise.getEmployeeDirectory().getEmployeeList()){
                        System.out.println("Check 2");
                        System.out.println(emp);
                        if(emp.equals(ea.getEmployee())){
                            System.out.println("Check 3");
                            e = enterprise;
                            System.out.println("Success in for loop");
                        }
                    }
                }
            }
        }
        UserAccount userAccount=system.getUserAccountDirectory().authenticateUser(userName, password);

        Enterprise inEnterprise=null;
        Organization inOrganization=null;
        Network net = null;

        if(userAccount==null){
            //Step 2: Go inside each network and check each enterprise
            for(Network network:system.getNetworkList()){
                //Step 2.a: check against each enterprise
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
                    userAccount=enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    System.out.println(userAccount +"is userAccount");
                    for(UserAccount usera : enterprise.getUserAccountDirectory().getUserAccountList()){
                        if(usera.getUsername().equals(userName) && usera.getPassword().equals(password)){
                            userAccount = usera;
                            System.out.println("Success inside user");
                        }
                    }
                    if (userAccount != null) {
                        System.out.println("118"+inEnterprise.getName());
                        inEnterprise = enterprise;
                        net = network;
                        break;
                    }
                    if(userAccount==null){
                        //Step 3:check against each organization for each enterprise
                        for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                            userAccount=organization.getUserAccountDirectory().authenticateUser(userName, password);
                            System.out.println("Line number 134");
                            System.out.println(userAccount);
                            if(userAccount!=null){
                                inEnterprise=enterprise;
                                inOrganization=organization;
                                net = network;
                                break;
                            }
                        }

                    }
                    else{
                        inEnterprise=enterprise;
                        net = network;
                        break;
                    }
                    if(inOrganization!=null){
                        inEnterprise=enterprise;
                        net = network;
                        break;
                    }
                }
                if(inEnterprise!=null){
                    net = network;
                    break;
                }
            }
        }

        if(userAccount==null){
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        }
        
        else{
            
            CardLayout layout=(CardLayout)workArea.getLayout();
            system = ConfigureASystem.configure();
            System.out.println(inEnterprise);
            workArea.add("workArea",userAccount.getRole().createWorkArea(workArea, userAccount, inOrganization, e, system, net));
            layout.next(workArea);
        }
    }//GEN-LAST:event_btnLoginActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
